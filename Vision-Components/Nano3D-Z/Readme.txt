Copyright (c) 2020, Pleora Technologies Inc., All rights reserved.================================================SoftDeviceGEV3d_VC-3D-Nano   Vision Components================================================1. DescriptionThis sample shows how to create and run a Software GigE Vision device for Vision Components (VC)Nano3D-Z Camera. The sample is implemented based on the “Linescan 3D sensor’s Intensity output” use-case as defined insection 21.3.1.2 of the GenICam Standard Features Naming Convention (SFNC), version 2.5. For reference,version 2.5 of the GenICam SFNC can be downloaded here: https://www.emva.org/wp-content/uploads/GenICam_SFNC_v2_5.pdf In addition to the implementation of the “Linescan 3D sensor’s Intensity output” use-case, the sample exposes some additional camera functionality via the GenApi interface of the Software GigE Vision device.These can be found in the devices AcquisitionControl/VcCameraControl sub-category of the GenICam interface.Having these features exposed allows for them to be controlled in a GigE Vision/GenICam compliant receiverapplication by the end user. Specifically, these exposed features include:       - LaserMode	  o Allows you to toggle on/off the laser output, when enabled, the GigE Vision multi-part payload type            will be enabled and the world coordinates calculated by the VC Nano3D-Z camera will be transmitted            as chunk data, more information can be found below.        - ExposureMode,	  o Allows the user to configure a fixed, timed or double exposure from the camera      - Gain	  o Allows the user to adjust the cameras gain      - Shutter	  o Allows the user to adjust the cameras shutter time. From a transport perspective, this sample uses the image payload type or the multi-part payload type from the GigE Vision 2.1 specification. The transmission payload type is dependent on whether or not the LaserMode is configured as “On” or “Off”.       - LaserMode = “Off”          o The GigE Vision video stream transmitted by the camera running the SoftDeviceGEV3d_VC-3D-Nano sample            will output a 2D image only using the image payload type. This configuration is the default configuration            for the LaserMode GenApi feature. To view the video data with eBUS Player, you must run in this mode.       - LaserMode = “On”          o The GigE Vision video stream transmitted by the camera running the SoftDeviceGEV3d_VC-3D-Nano sample            will output a multi-part container using the multi-part payload type. The multi-part container in this            case is composed of two parts.                 * The first part is the 2D image from the camera                 * The second part is chunk data (i.e. metadata) generated by the camera, this chunk data includes                   the number of valid laser points as well as the laser position in WORLD coordinates. Specifically,                          * The data of the chunk ID 0x4001 is valid number of points                         * The data of the chunk ID 0x4002 is float array of LaserPosX_MM                         * The data of the chunk ID 0x4003 id float array of LaserPosZ_MM          o NOTE: The eBUS Player sample does not display data received as part of a multi-part container,                   you can use the MultiSource sample code distributed alongside the Pleora eBUS SDK to                   view the image data part from the multi-part container. 2. PrerequisitesThis sample assumes that: * You have a network adapter installed on your PC with a valid IP address. * You have a GigE Vision controller/receiver that can receive and display images (such as eBUSPlayer or any other GigE Vision receiver that supports the GVSP protocol). The receiver should be reachable and on the same subnet as the interface from which it will be receiving. * You have an eBUS SDK Software GigE Vision Device license installed on your system3. Source file DescriptionThis project is customized from the SoftDeviceGEV3d project for VC-Nano3D-Z Camera.The SoftDeviceGEV3d project includes more 3D features, for additional GenICam 3D use-cases (i.e. Stereoscopic Areascan3D), however, given the “Linescan 3D sensor’s Intensity output” use-case requires only a subset of the functionality offered by the Sterescopic Areascan3D use-case, we use SCAN3D_FEATURE_ENABLE to disable the unused features. This is done so that should the developer require to move to a Stereoscopic 3D camera configuration, the sample code remains present, while being unused for the “Linescan 3D sensor’s Intensity output” use-case shown in the SoftDeviceGEV3d sample for the VC Nano3D-Z camera. In order to build the sample for the Stereoscopic Areascan3D use-case, use the make SCAN3D_FEATURE_ENABLE=1 to build the full 3D feature project to include all related GenApi features for your Stereoscopic 3D camera. 3.1 SoftDeviceGEV3d.cppMain entry point of the sample.3.1 MyEventSink.cppImplementation of the IPvSoftDeviceGEVEventSink interface. Used for event logging, creation of custom registers and creation of device-level custom GenApi features.3.2 MyRegisterEventSink.cppImplementation of the IPvRegisterEventSink interface. Used to demonstrate how to handle register events.3.3 Source3d.cppImplementation of the IPvStreamingChannelSource interface. Used to show how to properly implement and manage an image source in the context of a Software GigE Vision Device for the VC Nano3D-Z camera. Data chunks are fully supported once enabled from the GenApi interface of the software GigE Vision device. Shows how to create a streaming source-level GenApi interfaces, the registers behind the GenApi features and how to handle moving information to and from data structures. Also shows how to define and handle regions. This is also where the VC Nano3D-Z camera functionality (including the camera specific GenApi features and “Linescan 3D sensor’s Intensity output” use-case related GenApi features) is mapped into the Soft GigE Vision Devices GenICam interface and the GigE Vision data transmission. Implementation of the IPvStreamingChannelSource interface for a raw image passthrough of the right camera of a 3D stereo sensor.3.5 Utilities.cppStand-alone functions used throughout the sample. DumpRegister shows how to browser the IPvRegisterMap of PvSoftDeviceGEV. FireTestEvents shows how to generate events on the messaging channel.IMPORTANT: If you do not have an eBUS SDK Software GigE Vision license installed on your VC Nano3D camera, the sample will restrict your ability to customize the identity of the device and disconnect all applications after 15 minutes.